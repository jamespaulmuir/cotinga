<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Public_Metadatavalue_Item', 'doctrine');

/**
 * BasePublic_Metadatavalue_Item
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $metadata_value_id
 * @property integer $item_id
 * @property integer $metadata_field_id
 * @property string $text_value
 * @property string $text_lang
 * @property integer $place
 * @property string $authority
 * @property integer $confidence
 * @property Public_Item_Item $Public_Item_Item
 * @property Public_Metadatafieldregistry_Item $Public_Metadatafieldregistry_Item
 * 
 * @method integer                           getMetadataValueId()                   Returns the current record's "metadata_value_id" value
 * @method integer                           getItemId()                            Returns the current record's "item_id" value
 * @method integer                           getMetadataFieldId()                   Returns the current record's "metadata_field_id" value
 * @method string                            getTextValue()                         Returns the current record's "text_value" value
 * @method string                            getTextLang()                          Returns the current record's "text_lang" value
 * @method integer                           getPlace()                             Returns the current record's "place" value
 * @method string                            getAuthority()                         Returns the current record's "authority" value
 * @method integer                           getConfidence()                        Returns the current record's "confidence" value
 * @method Public_Item_Item                  getPublicItemItem()                    Returns the current record's "Public_Item_Item" value
 * @method Public_Metadatafieldregistry_Item getPublicMetadatafieldregistryItem()   Returns the current record's "Public_Metadatafieldregistry_Item" value
 * @method Public_Metadatavalue_Item         setMetadataValueId()                   Sets the current record's "metadata_value_id" value
 * @method Public_Metadatavalue_Item         setItemId()                            Sets the current record's "item_id" value
 * @method Public_Metadatavalue_Item         setMetadataFieldId()                   Sets the current record's "metadata_field_id" value
 * @method Public_Metadatavalue_Item         setTextValue()                         Sets the current record's "text_value" value
 * @method Public_Metadatavalue_Item         setTextLang()                          Sets the current record's "text_lang" value
 * @method Public_Metadatavalue_Item         setPlace()                             Sets the current record's "place" value
 * @method Public_Metadatavalue_Item         setAuthority()                         Sets the current record's "authority" value
 * @method Public_Metadatavalue_Item         setConfidence()                        Sets the current record's "confidence" value
 * @method Public_Metadatavalue_Item         setPublicItemItem()                    Sets the current record's "Public_Item_Item" value
 * @method Public_Metadatavalue_Item         setPublicMetadatafieldregistryItem()   Sets the current record's "Public_Metadatafieldregistry_Item" value
 * 
 * @package    dspace
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePublic_Metadatavalue_Item extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('public.metadatavalue');
        $this->hasColumn('metadata_value_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'length' => 4,
             ));
        $this->hasColumn('item_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('metadata_field_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('text_value', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('text_lang', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('place', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('authority', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('confidence', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'default' => '(-1)',
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Public_Item_Item', array(
             'local' => 'item_id',
             'foreign' => 'item_id'));

        $this->hasOne('Public_Metadatafieldregistry_Item', array(
             'local' => 'metadata_field_id',
             'foreign' => 'metadata_field_id'));
    }
}