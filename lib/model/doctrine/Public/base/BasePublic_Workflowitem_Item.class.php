<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Public_Workflowitem_Item', 'doctrine');

/**
 * BasePublic_Workflowitem_Item
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $workflow_id
 * @property integer $item_id
 * @property integer $collection_id
 * @property integer $state
 * @property integer $owner
 * @property boolean $multiple_titles
 * @property boolean $published_before
 * @property boolean $multiple_files
 * @property Public_Item_Item $Public_Item_Item
 * @property Public_Collection_Item $Public_Collection_Item
 * @property Public_Eperson_Item $Public_Eperson_Item
 * @property Doctrine_Collection $Public_Tasklistitem_Items
 * 
 * @method integer                  getWorkflowId()                Returns the current record's "workflow_id" value
 * @method integer                  getItemId()                    Returns the current record's "item_id" value
 * @method integer                  getCollectionId()              Returns the current record's "collection_id" value
 * @method integer                  getState()                     Returns the current record's "state" value
 * @method integer                  getOwner()                     Returns the current record's "owner" value
 * @method boolean                  getMultipleTitles()            Returns the current record's "multiple_titles" value
 * @method boolean                  getPublishedBefore()           Returns the current record's "published_before" value
 * @method boolean                  getMultipleFiles()             Returns the current record's "multiple_files" value
 * @method Public_Item_Item         getPublicItemItem()            Returns the current record's "Public_Item_Item" value
 * @method Public_Collection_Item   getPublicCollectionItem()      Returns the current record's "Public_Collection_Item" value
 * @method Public_Eperson_Item      getPublicEpersonItem()         Returns the current record's "Public_Eperson_Item" value
 * @method Doctrine_Collection      getPublicTasklistitemItems()   Returns the current record's "Public_Tasklistitem_Items" collection
 * @method Public_Workflowitem_Item setWorkflowId()                Sets the current record's "workflow_id" value
 * @method Public_Workflowitem_Item setItemId()                    Sets the current record's "item_id" value
 * @method Public_Workflowitem_Item setCollectionId()              Sets the current record's "collection_id" value
 * @method Public_Workflowitem_Item setState()                     Sets the current record's "state" value
 * @method Public_Workflowitem_Item setOwner()                     Sets the current record's "owner" value
 * @method Public_Workflowitem_Item setMultipleTitles()            Sets the current record's "multiple_titles" value
 * @method Public_Workflowitem_Item setPublishedBefore()           Sets the current record's "published_before" value
 * @method Public_Workflowitem_Item setMultipleFiles()             Sets the current record's "multiple_files" value
 * @method Public_Workflowitem_Item setPublicItemItem()            Sets the current record's "Public_Item_Item" value
 * @method Public_Workflowitem_Item setPublicCollectionItem()      Sets the current record's "Public_Collection_Item" value
 * @method Public_Workflowitem_Item setPublicEpersonItem()         Sets the current record's "Public_Eperson_Item" value
 * @method Public_Workflowitem_Item setPublicTasklistitemItems()   Sets the current record's "Public_Tasklistitem_Items" collection
 * 
 * @package    dspace
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePublic_Workflowitem_Item extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('public.workflowitem');
        $this->hasColumn('workflow_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'length' => 4,
             ));
        $this->hasColumn('item_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('collection_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('state', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('owner', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('multiple_titles', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('published_before', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('multiple_files', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Public_Item_Item', array(
             'local' => 'item_id',
             'foreign' => 'item_id'));

        $this->hasOne('Public_Collection_Item', array(
             'local' => 'collection_id',
             'foreign' => 'collection_id'));

        $this->hasOne('Public_Eperson_Item', array(
             'local' => 'owner',
             'foreign' => 'eperson_id'));

        $this->hasMany('Public_Tasklistitem_Item as Public_Tasklistitem_Items', array(
             'local' => 'workflow_id',
             'foreign' => 'workflow_id'));
    }
}