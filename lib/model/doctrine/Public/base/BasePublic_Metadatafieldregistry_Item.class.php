<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Public_Metadatafieldregistry_Item', 'doctrine');

/**
 * BasePublic_Metadatafieldregistry_Item
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $metadata_field_id
 * @property integer $metadata_schema_id
 * @property string $element
 * @property string $qualifier
 * @property string $scope_note
 * @property Public_Metadataschemaregistry_Item $Public_Metadataschemaregistry_Item
 * @property Doctrine_Collection $Public_Metadatavalue_Items
 * 
 * @method integer                            getMetadataFieldId()                    Returns the current record's "metadata_field_id" value
 * @method integer                            getMetadataSchemaId()                   Returns the current record's "metadata_schema_id" value
 * @method string                             getElement()                            Returns the current record's "element" value
 * @method string                             getQualifier()                          Returns the current record's "qualifier" value
 * @method string                             getScopeNote()                          Returns the current record's "scope_note" value
 * @method Public_Metadataschemaregistry_Item getPublicMetadataschemaregistryItem()   Returns the current record's "Public_Metadataschemaregistry_Item" value
 * @method Doctrine_Collection                getPublicMetadatavalueItems()           Returns the current record's "Public_Metadatavalue_Items" collection
 * @method Public_Metadatafieldregistry_Item  setMetadataFieldId()                    Sets the current record's "metadata_field_id" value
 * @method Public_Metadatafieldregistry_Item  setMetadataSchemaId()                   Sets the current record's "metadata_schema_id" value
 * @method Public_Metadatafieldregistry_Item  setElement()                            Sets the current record's "element" value
 * @method Public_Metadatafieldregistry_Item  setQualifier()                          Sets the current record's "qualifier" value
 * @method Public_Metadatafieldregistry_Item  setScopeNote()                          Sets the current record's "scope_note" value
 * @method Public_Metadatafieldregistry_Item  setPublicMetadataschemaregistryItem()   Sets the current record's "Public_Metadataschemaregistry_Item" value
 * @method Public_Metadatafieldregistry_Item  setPublicMetadatavalueItems()           Sets the current record's "Public_Metadatavalue_Items" collection
 * 
 * @package    dspace
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePublic_Metadatafieldregistry_Item extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('public.metadatafieldregistry');
        $this->hasColumn('metadata_field_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'length' => 4,
             ));
        $this->hasColumn('metadata_schema_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('element', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('qualifier', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('scope_note', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Public_Metadataschemaregistry_Item', array(
             'local' => 'metadata_schema_id',
             'foreign' => 'metadata_schema_id'));

        $this->hasMany('Public_Metadatavalue_Item as Public_Metadatavalue_Items', array(
             'local' => 'metadata_field_id',
             'foreign' => 'metadata_field_id'));
    }
}