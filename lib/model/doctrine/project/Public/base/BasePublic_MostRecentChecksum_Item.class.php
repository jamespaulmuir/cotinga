<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Public_MostRecentChecksum_Item', 'doctrine');

/**
 * BasePublic_MostRecentChecksum_Item
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $bitstream_id
 * @property boolean $to_be_processed
 * @property string $expected_checksum
 * @property string $current_checksum
 * @property timestamp $last_process_start_date
 * @property timestamp $last_process_end_date
 * @property string $checksum_algorithm
 * @property boolean $matched_prev_checksum
 * @property string $result
 * @property Public_Bitstream_Item $Public_Bitstream_Item
 * @property Public_ChecksumResults_Item $Public_ChecksumResults_Item
 * 
 * @method integer                        getBitstreamId()                 Returns the current record's "bitstream_id" value
 * @method boolean                        getToBeProcessed()               Returns the current record's "to_be_processed" value
 * @method string                         getExpectedChecksum()            Returns the current record's "expected_checksum" value
 * @method string                         getCurrentChecksum()             Returns the current record's "current_checksum" value
 * @method timestamp                      getLastProcessStartDate()        Returns the current record's "last_process_start_date" value
 * @method timestamp                      getLastProcessEndDate()          Returns the current record's "last_process_end_date" value
 * @method string                         getChecksumAlgorithm()           Returns the current record's "checksum_algorithm" value
 * @method boolean                        getMatchedPrevChecksum()         Returns the current record's "matched_prev_checksum" value
 * @method string                         getResult()                      Returns the current record's "result" value
 * @method Public_Bitstream_Item          getPublicBitstreamItem()         Returns the current record's "Public_Bitstream_Item" value
 * @method Public_ChecksumResults_Item    getPublicChecksumResultsItem()   Returns the current record's "Public_ChecksumResults_Item" value
 * @method Public_MostRecentChecksum_Item setBitstreamId()                 Sets the current record's "bitstream_id" value
 * @method Public_MostRecentChecksum_Item setToBeProcessed()               Sets the current record's "to_be_processed" value
 * @method Public_MostRecentChecksum_Item setExpectedChecksum()            Sets the current record's "expected_checksum" value
 * @method Public_MostRecentChecksum_Item setCurrentChecksum()             Sets the current record's "current_checksum" value
 * @method Public_MostRecentChecksum_Item setLastProcessStartDate()        Sets the current record's "last_process_start_date" value
 * @method Public_MostRecentChecksum_Item setLastProcessEndDate()          Sets the current record's "last_process_end_date" value
 * @method Public_MostRecentChecksum_Item setChecksumAlgorithm()           Sets the current record's "checksum_algorithm" value
 * @method Public_MostRecentChecksum_Item setMatchedPrevChecksum()         Sets the current record's "matched_prev_checksum" value
 * @method Public_MostRecentChecksum_Item setResult()                      Sets the current record's "result" value
 * @method Public_MostRecentChecksum_Item setPublicBitstreamItem()         Sets the current record's "Public_Bitstream_Item" value
 * @method Public_MostRecentChecksum_Item setPublicChecksumResultsItem()   Sets the current record's "Public_ChecksumResults_Item" value
 * 
 * @package    dspace
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePublic_MostRecentChecksum_Item extends BaseDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('public.most_recent_checksum');
        $this->hasColumn('bitstream_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'length' => 4,
             ));
        $this->hasColumn('to_be_processed', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('expected_checksum', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('current_checksum', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('last_process_start_date', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('last_process_end_date', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('checksum_algorithm', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('matched_prev_checksum', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('result', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Public_Bitstream_Item', array(
             'local' => 'bitstream_id',
             'foreign' => 'bitstream_id'));

        $this->hasOne('Public_ChecksumResults_Item', array(
             'local' => 'result',
             'foreign' => 'result_code'));
    }
}