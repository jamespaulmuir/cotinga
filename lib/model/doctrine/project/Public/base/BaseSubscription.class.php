<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Subscription', 'doctrine');

/**
 * BaseSubscription
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $subscription_id
 * @property integer $eperson_id
 * @property integer $collection_id
 * @property Eperson $Eperson
 * @property Collection $Collection
 * 
 * @method integer      getSubscriptionId()  Returns the current record's "subscription_id" value
 * @method integer      getEpersonId()       Returns the current record's "eperson_id" value
 * @method integer      getCollectionId()    Returns the current record's "collection_id" value
 * @method Eperson      getEperson()         Returns the current record's "Eperson" value
 * @method Collection   getCollection()      Returns the current record's "Collection" value
 * @method Subscription setSubscriptionId()  Sets the current record's "subscription_id" value
 * @method Subscription setEpersonId()       Sets the current record's "eperson_id" value
 * @method Subscription setCollectionId()    Sets the current record's "collection_id" value
 * @method Subscription setEperson()         Sets the current record's "Eperson" value
 * @method Subscription setCollection()      Sets the current record's "Collection" value
 * 
 * @package    dspace
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSubscription extends BaseDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('public.subscription');
        $this->hasColumn('subscription_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'length' => 4,
             ));
        $this->hasColumn('eperson_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('collection_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Eperson', array(
             'local' => 'eperson_id',
             'foreign' => 'eperson_id'));

        $this->hasOne('Collection', array(
             'local' => 'collection_id',
             'foreign' => 'collection_id'));
    }
}