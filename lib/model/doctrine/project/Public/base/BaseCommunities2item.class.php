<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Communities2item', 'doctrine');

/**
 * BaseCommunities2item
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $community_id
 * @property integer $item_id
 * @property Community $Community
 * @property Item $Item
 * 
 * @method integer          getId()           Returns the current record's "id" value
 * @method integer          getCommunityId()  Returns the current record's "community_id" value
 * @method integer          getItemId()       Returns the current record's "item_id" value
 * @method Community        getCommunity()    Returns the current record's "Community" value
 * @method Item             getItem()         Returns the current record's "Item" value
 * @method Communities2item setId()           Sets the current record's "id" value
 * @method Communities2item setCommunityId()  Sets the current record's "community_id" value
 * @method Communities2item setItemId()       Sets the current record's "item_id" value
 * @method Communities2item setCommunity()    Sets the current record's "Community" value
 * @method Communities2item setItem()         Sets the current record's "Item" value
 * 
 * @package    dspace
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCommunities2item extends BaseDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('public.communities2item');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'length' => 4,
             ));
        $this->hasColumn('community_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('item_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Community', array(
             'local' => 'community_id',
             'foreign' => 'community_id'));

        $this->hasOne('Item', array(
             'local' => 'item_id',
             'foreign' => 'item_id'));
    }
}