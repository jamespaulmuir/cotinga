<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Community2collection', 'doctrine');

/**
 * BaseCommunity2collection
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $community_id
 * @property integer $collection_id
 * @property Collection $Collection_ForCollection as Collection
 * @property Community $Community
 * 
 * @method integer              getId()                       Returns the current record's "id" value
 * @method integer              getCommunityId()              Returns the current record's "community_id" value
 * @method integer              getCollectionId()             Returns the current record's "collection_id" value
 * @method Collection           getCollectionForCollection()  Returns the current record's "Collection_ForCollection" value
 * @method Community            getCommunity()                Returns the current record's "Community" value
 * @method Community2collection setId()                       Sets the current record's "id" value
 * @method Community2collection setCommunityId()              Sets the current record's "community_id" value
 * @method Community2collection setCollectionId()             Sets the current record's "collection_id" value
 * @method Community2collection setCollectionForCollection()  Sets the current record's "Collection_ForCollection" value
 * @method Community2collection setCommunity()                Sets the current record's "Community" value
 * 
 * @package    dspace
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCommunity2collection extends BaseDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('public.community2collection');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'length' => 4,
             ));
        $this->hasColumn('community_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('collection_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Collection as Collection_ForCollection as Collection', array(
             'local' => 'collection_id',
             'foreign' => 'collection_id'));

        $this->hasOne('Community', array(
             'local' => 'community_id',
             'foreign' => 'community_id'));
    }
}