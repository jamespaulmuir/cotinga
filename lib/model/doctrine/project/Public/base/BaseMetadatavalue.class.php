<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Metadatavalue', 'doctrine');

/**
 * BaseMetadatavalue
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $metadata_value_id
 * @property integer $item_id
 * @property integer $metadata_field_id
 * @property string $text_value
 * @property string $text_lang
 * @property integer $place
 * @property string $authority
 * @property integer $confidence
 * @property Item $Item
 * @property Metadatafieldregistry $Metadatafieldregistry
 * 
 * @method integer               getMetadataValueId()       Returns the current record's "metadata_value_id" value
 * @method integer               getItemId()                Returns the current record's "item_id" value
 * @method integer               getMetadataFieldId()       Returns the current record's "metadata_field_id" value
 * @method string                getTextValue()             Returns the current record's "text_value" value
 * @method string                getTextLang()              Returns the current record's "text_lang" value
 * @method integer               getPlace()                 Returns the current record's "place" value
 * @method string                getAuthority()             Returns the current record's "authority" value
 * @method integer               getConfidence()            Returns the current record's "confidence" value
 * @method Item                  getItem()                  Returns the current record's "Item" value
 * @method Metadatafieldregistry getMetadatafieldregistry() Returns the current record's "Metadatafieldregistry" value
 * @method Metadatavalue         setMetadataValueId()       Sets the current record's "metadata_value_id" value
 * @method Metadatavalue         setItemId()                Sets the current record's "item_id" value
 * @method Metadatavalue         setMetadataFieldId()       Sets the current record's "metadata_field_id" value
 * @method Metadatavalue         setTextValue()             Sets the current record's "text_value" value
 * @method Metadatavalue         setTextLang()              Sets the current record's "text_lang" value
 * @method Metadatavalue         setPlace()                 Sets the current record's "place" value
 * @method Metadatavalue         setAuthority()             Sets the current record's "authority" value
 * @method Metadatavalue         setConfidence()            Sets the current record's "confidence" value
 * @method Metadatavalue         setItem()                  Sets the current record's "Item" value
 * @method Metadatavalue         setMetadatafieldregistry() Sets the current record's "Metadatafieldregistry" value
 * 
 * @package    dspace
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMetadatavalue extends BaseDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('public.metadatavalue');
        $this->hasColumn('metadata_value_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'length' => 4,
             ));
        $this->hasColumn('item_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('metadata_field_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('text_value', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('text_lang', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('place', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('authority', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('confidence', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'default' => '(-1)',
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Item', array(
             'local' => 'item_id',
             'foreign' => 'item_id'));

        $this->hasOne('Metadatafieldregistry', array(
             'local' => 'metadata_field_id',
             'foreign' => 'metadata_field_id'));
    }
}