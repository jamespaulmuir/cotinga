<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Bitstream', 'doctrine');

/**
 * BaseBitstream
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $bitstream_id
 * @property integer $bitstream_format_id
 * @property string $name
 * @property string $checksum
 * @property string $checksum_algorithm
 * @property string $description
 * @property string $user_format_description
 * @property string $source
 * @property string $internal_id
 * @property boolean $deleted
 * @property integer $store_number
 * @property integer $sequence_id
 * @property integer $size_bytes
 * @property BitstreamFormatRegistry $Format
 * @property Doctrine_Collection $BundlePrimary
 * @property Doctrine_Collection $MostRecentChecksums
 * @property Doctrine_Collection $Bundles
 * @property Doctrine_Collection $CollectionsLogo
 * @property Doctrine_Collection $CommunitiesLogo
 * @property Doctrine_Collection $Bundle2bitstream
 * 
 * @method integer                 getBitstreamId()             Returns the current record's "bitstream_id" value
 * @method integer                 getBitstreamFormatId()       Returns the current record's "bitstream_format_id" value
 * @method string                  getName()                    Returns the current record's "name" value
 * @method string                  getChecksum()                Returns the current record's "checksum" value
 * @method string                  getChecksumAlgorithm()       Returns the current record's "checksum_algorithm" value
 * @method string                  getDescription()             Returns the current record's "description" value
 * @method string                  getUserFormatDescription()   Returns the current record's "user_format_description" value
 * @method string                  getSource()                  Returns the current record's "source" value
 * @method string                  getInternalId()              Returns the current record's "internal_id" value
 * @method boolean                 getDeleted()                 Returns the current record's "deleted" value
 * @method integer                 getStoreNumber()             Returns the current record's "store_number" value
 * @method integer                 getSequenceId()              Returns the current record's "sequence_id" value
 * @method integer                 getSizeBytes()               Returns the current record's "size_bytes" value
 * @method BitstreamFormatRegistry getFormat()                  Returns the current record's "Format" value
 * @method Doctrine_Collection     getBundlePrimary()           Returns the current record's "BundlePrimary" collection
 * @method Doctrine_Collection     getMostRecentChecksums()     Returns the current record's "MostRecentChecksums" collection
 * @method Doctrine_Collection     getBundles()                 Returns the current record's "Bundles" collection
 * @method Doctrine_Collection     getCollectionsLogo()         Returns the current record's "CollectionsLogo" collection
 * @method Doctrine_Collection     getCommunitiesLogo()         Returns the current record's "CommunitiesLogo" collection
 * @method Doctrine_Collection     getBundle2bitstream()        Returns the current record's "Bundle2bitstream" collection
 * @method Bitstream               setBitstreamId()             Sets the current record's "bitstream_id" value
 * @method Bitstream               setBitstreamFormatId()       Sets the current record's "bitstream_format_id" value
 * @method Bitstream               setName()                    Sets the current record's "name" value
 * @method Bitstream               setChecksum()                Sets the current record's "checksum" value
 * @method Bitstream               setChecksumAlgorithm()       Sets the current record's "checksum_algorithm" value
 * @method Bitstream               setDescription()             Sets the current record's "description" value
 * @method Bitstream               setUserFormatDescription()   Sets the current record's "user_format_description" value
 * @method Bitstream               setSource()                  Sets the current record's "source" value
 * @method Bitstream               setInternalId()              Sets the current record's "internal_id" value
 * @method Bitstream               setDeleted()                 Sets the current record's "deleted" value
 * @method Bitstream               setStoreNumber()             Sets the current record's "store_number" value
 * @method Bitstream               setSequenceId()              Sets the current record's "sequence_id" value
 * @method Bitstream               setSizeBytes()               Sets the current record's "size_bytes" value
 * @method Bitstream               setFormat()                  Sets the current record's "Format" value
 * @method Bitstream               setBundlePrimary()           Sets the current record's "BundlePrimary" collection
 * @method Bitstream               setMostRecentChecksums()     Sets the current record's "MostRecentChecksums" collection
 * @method Bitstream               setBundles()                 Sets the current record's "Bundles" collection
 * @method Bitstream               setCollectionsLogo()         Sets the current record's "CollectionsLogo" collection
 * @method Bitstream               setCommunitiesLogo()         Sets the current record's "CommunitiesLogo" collection
 * @method Bitstream               setBundle2bitstream()        Sets the current record's "Bundle2bitstream" collection
 * 
 * @package    dspace
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBitstream extends BaseDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('public.bitstream');
        $this->hasColumn('bitstream_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'length' => 4,
             ));
        $this->hasColumn('bitstream_format_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('checksum', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('checksum_algorithm', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('user_format_description', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('source', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('internal_id', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('deleted', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('store_number', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('sequence_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('size_bytes', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 8,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('BitstreamFormatRegistry as Format', array(
             'local' => 'bitstream_format_id',
             'foreign' => 'bitstream_format_id'));

        $this->hasMany('Bundle as BundlePrimary', array(
             'local' => 'bitstream_id',
             'foreign' => 'primary_bitstream_id'));

        $this->hasMany('MostRecentChecksum as MostRecentChecksums', array(
             'local' => 'bitstream_id',
             'foreign' => 'bitstream_id'));

        $this->hasMany('Bundle as Bundles', array(
             'refClass' => 'Bundle2bitstream',
             'local' => 'bitstream_id',
             'foreign' => 'bundle_id'));

        $this->hasMany('Collection as CollectionsLogo', array(
             'local' => 'bitstream_id',
             'foreign' => 'logo_bitstream_id'));

        $this->hasMany('Community as CommunitiesLogo', array(
             'local' => 'bitstream_id',
             'foreign' => 'logo_bitstream_id'));

        $this->hasMany('Bundle2bitstream', array(
             'local' => 'bitstream_id',
             'foreign' => 'bitstream_id'));
    }
}