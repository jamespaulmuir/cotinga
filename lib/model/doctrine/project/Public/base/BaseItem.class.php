<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Item', 'doctrine');

/**
 * BaseItem
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $item_id
 * @property integer $submitter_id
 * @property boolean $in_archive
 * @property boolean $withdrawn
 * @property integer $owning_collection
 * @property timestamp $last_modified
 * @property Eperson $Eperson
 * @property Doctrine_Collection $BiItems
 * @property Doctrine_Collection $HarvestedItems
 * @property Doctrine_Collection $BiWithdrawns
 * @property Doctrine_Collection $Bi2Dmaps
 * @property Doctrine_Collection $CollectionsTemplateFor
 * @property Doctrine_Collection $Bundles
 * @property Doctrine_Collection $Collections
 * @property Doctrine_Collection $Metadatavalues
 * @property Doctrine_Collection $Bi4Dmaps
 * @property Doctrine_Collection $Workflowitems
 * @property Doctrine_Collection $Communities
 * @property Doctrine_Collection $Workspaceitems
 * @property Doctrine_Collection $Collection2item
 * @property Doctrine_Collection $Communities2item
 * @property Doctrine_Collection $Item2bundle
 * 
 * @method integer             getItemId()                 Returns the current record's "item_id" value
 * @method integer             getSubmitterId()            Returns the current record's "submitter_id" value
 * @method boolean             getInArchive()              Returns the current record's "in_archive" value
 * @method boolean             getWithdrawn()              Returns the current record's "withdrawn" value
 * @method integer             getOwningCollection()       Returns the current record's "owning_collection" value
 * @method timestamp           getLastModified()           Returns the current record's "last_modified" value
 * @method Eperson             getEperson()                Returns the current record's "Eperson" value
 * @method Doctrine_Collection getBiItems()                Returns the current record's "BiItems" collection
 * @method Doctrine_Collection getHarvestedItems()         Returns the current record's "HarvestedItems" collection
 * @method Doctrine_Collection getBiWithdrawns()           Returns the current record's "BiWithdrawns" collection
 * @method Doctrine_Collection getBi2Dmaps()               Returns the current record's "Bi2Dmaps" collection
 * @method Doctrine_Collection getCollectionsTemplateFor() Returns the current record's "CollectionsTemplateFor" collection
 * @method Doctrine_Collection getBundles()                Returns the current record's "Bundles" collection
 * @method Doctrine_Collection getCollections()            Returns the current record's "Collections" collection
 * @method Doctrine_Collection getMetadatavalues()         Returns the current record's "Metadatavalues" collection
 * @method Doctrine_Collection getBi4Dmaps()               Returns the current record's "Bi4Dmaps" collection
 * @method Doctrine_Collection getWorkflowitems()          Returns the current record's "Workflowitems" collection
 * @method Doctrine_Collection getCommunities()            Returns the current record's "Communities" collection
 * @method Doctrine_Collection getWorkspaceitems()         Returns the current record's "Workspaceitems" collection
 * @method Doctrine_Collection getCollection2item()        Returns the current record's "Collection2item" collection
 * @method Doctrine_Collection getCommunities2item()       Returns the current record's "Communities2item" collection
 * @method Doctrine_Collection getItem2bundle()            Returns the current record's "Item2bundle" collection
 * @method Item                setItemId()                 Sets the current record's "item_id" value
 * @method Item                setSubmitterId()            Sets the current record's "submitter_id" value
 * @method Item                setInArchive()              Sets the current record's "in_archive" value
 * @method Item                setWithdrawn()              Sets the current record's "withdrawn" value
 * @method Item                setOwningCollection()       Sets the current record's "owning_collection" value
 * @method Item                setLastModified()           Sets the current record's "last_modified" value
 * @method Item                setEperson()                Sets the current record's "Eperson" value
 * @method Item                setBiItems()                Sets the current record's "BiItems" collection
 * @method Item                setHarvestedItems()         Sets the current record's "HarvestedItems" collection
 * @method Item                setBiWithdrawns()           Sets the current record's "BiWithdrawns" collection
 * @method Item                setBi2Dmaps()               Sets the current record's "Bi2Dmaps" collection
 * @method Item                setCollectionsTemplateFor() Sets the current record's "CollectionsTemplateFor" collection
 * @method Item                setBundles()                Sets the current record's "Bundles" collection
 * @method Item                setCollections()            Sets the current record's "Collections" collection
 * @method Item                setMetadatavalues()         Sets the current record's "Metadatavalues" collection
 * @method Item                setBi4Dmaps()               Sets the current record's "Bi4Dmaps" collection
 * @method Item                setWorkflowitems()          Sets the current record's "Workflowitems" collection
 * @method Item                setCommunities()            Sets the current record's "Communities" collection
 * @method Item                setWorkspaceitems()         Sets the current record's "Workspaceitems" collection
 * @method Item                setCollection2item()        Sets the current record's "Collection2item" collection
 * @method Item                setCommunities2item()       Sets the current record's "Communities2item" collection
 * @method Item                setItem2bundle()            Sets the current record's "Item2bundle" collection
 * 
 * @package    dspace
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseItem extends BaseDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('public.item');
        $this->hasColumn('item_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'length' => 4,
             ));
        $this->hasColumn('submitter_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('in_archive', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('withdrawn', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('owning_collection', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('last_modified', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Eperson', array(
             'local' => 'submitter_id',
             'foreign' => 'eperson_id'));

        $this->hasMany('BiItem as BiItems', array(
             'local' => 'item_id',
             'foreign' => 'item_id'));

        $this->hasMany('HarvestedItem as HarvestedItems', array(
             'local' => 'item_id',
             'foreign' => 'item_id'));

        $this->hasMany('BiWithdrawn as BiWithdrawns', array(
             'local' => 'item_id',
             'foreign' => 'item_id'));

        $this->hasMany('Bi2Dmap as Bi2Dmaps', array(
             'local' => 'item_id',
             'foreign' => 'item_id'));

        $this->hasMany('Collection as CollectionsTemplateFor', array(
             'local' => 'item_id',
             'foreign' => 'template_item_id'));

        $this->hasMany('Bundle as Bundles', array(
             'refClass' => 'Item2bundle',
             'local' => 'item_id',
             'foreign' => 'bundle_id'));

        $this->hasMany('Collection as Collections', array(
             'refClass' => 'Collection2item',
             'local' => 'item_id',
             'foreign' => 'collection_id'));

        $this->hasMany('Metadatavalue as Metadatavalues', array(
             'local' => 'item_id',
             'foreign' => 'item_id'));

        $this->hasMany('Bi4Dmap as Bi4Dmaps', array(
             'local' => 'item_id',
             'foreign' => 'item_id'));

        $this->hasMany('Workflowitem as Workflowitems', array(
             'local' => 'item_id',
             'foreign' => 'item_id'));

        $this->hasMany('Community as Communities', array(
             'refClass' => 'Communities2item',
             'local' => 'item_id',
             'foreign' => 'community_id'));

        $this->hasMany('Workspaceitem as Workspaceitems', array(
             'local' => 'item_id',
             'foreign' => 'item_id'));

        $this->hasMany('Collection2item', array(
             'local' => 'item_id',
             'foreign' => 'item_id'));

        $this->hasMany('Communities2item', array(
             'local' => 'item_id',
             'foreign' => 'item_id'));

        $this->hasMany('Item2bundle', array(
             'local' => 'item_id',
             'foreign' => 'item_id'));
    }
}