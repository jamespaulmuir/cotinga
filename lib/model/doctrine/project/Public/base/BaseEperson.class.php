<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Eperson', 'doctrine');

/**
 * BaseEperson
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $eperson_id
 * @property string $email
 * @property string $password
 * @property string $firstname
 * @property string $lastname
 * @property boolean $can_log_in
 * @property boolean $require_certificate
 * @property boolean $self_registered
 * @property timestamp $last_active
 * @property integer $sub_frequency
 * @property string $phone
 * @property string $netid
 * @property string $language
 * @property Doctrine_Collection $Subscriptions
 * @property Doctrine_Collection $Resourcepolicys
 * @property Doctrine_Collection $Workflowitems
 * @property Doctrine_Collection $Epersongroup2epersons
 * @property Doctrine_Collection $Tasklistitems
 * @property Doctrine_Collection $Items
 * 
 * @method integer             getEpersonId()             Returns the current record's "eperson_id" value
 * @method string              getEmail()                 Returns the current record's "email" value
 * @method string              getPassword()              Returns the current record's "password" value
 * @method string              getFirstname()             Returns the current record's "firstname" value
 * @method string              getLastname()              Returns the current record's "lastname" value
 * @method boolean             getCanLogIn()              Returns the current record's "can_log_in" value
 * @method boolean             getRequireCertificate()    Returns the current record's "require_certificate" value
 * @method boolean             getSelfRegistered()        Returns the current record's "self_registered" value
 * @method timestamp           getLastActive()            Returns the current record's "last_active" value
 * @method integer             getSubFrequency()          Returns the current record's "sub_frequency" value
 * @method string              getPhone()                 Returns the current record's "phone" value
 * @method string              getNetid()                 Returns the current record's "netid" value
 * @method string              getLanguage()              Returns the current record's "language" value
 * @method Doctrine_Collection getSubscriptions()         Returns the current record's "Subscriptions" collection
 * @method Doctrine_Collection getResourcepolicys()       Returns the current record's "Resourcepolicys" collection
 * @method Doctrine_Collection getWorkflowitems()         Returns the current record's "Workflowitems" collection
 * @method Doctrine_Collection getEpersongroup2epersons() Returns the current record's "Epersongroup2epersons" collection
 * @method Doctrine_Collection getTasklistitems()         Returns the current record's "Tasklistitems" collection
 * @method Doctrine_Collection getItems()                 Returns the current record's "Items" collection
 * @method Eperson             setEpersonId()             Sets the current record's "eperson_id" value
 * @method Eperson             setEmail()                 Sets the current record's "email" value
 * @method Eperson             setPassword()              Sets the current record's "password" value
 * @method Eperson             setFirstname()             Sets the current record's "firstname" value
 * @method Eperson             setLastname()              Sets the current record's "lastname" value
 * @method Eperson             setCanLogIn()              Sets the current record's "can_log_in" value
 * @method Eperson             setRequireCertificate()    Sets the current record's "require_certificate" value
 * @method Eperson             setSelfRegistered()        Sets the current record's "self_registered" value
 * @method Eperson             setLastActive()            Sets the current record's "last_active" value
 * @method Eperson             setSubFrequency()          Sets the current record's "sub_frequency" value
 * @method Eperson             setPhone()                 Sets the current record's "phone" value
 * @method Eperson             setNetid()                 Sets the current record's "netid" value
 * @method Eperson             setLanguage()              Sets the current record's "language" value
 * @method Eperson             setSubscriptions()         Sets the current record's "Subscriptions" collection
 * @method Eperson             setResourcepolicys()       Sets the current record's "Resourcepolicys" collection
 * @method Eperson             setWorkflowitems()         Sets the current record's "Workflowitems" collection
 * @method Eperson             setEpersongroup2epersons() Sets the current record's "Epersongroup2epersons" collection
 * @method Eperson             setTasklistitems()         Sets the current record's "Tasklistitems" collection
 * @method Eperson             setItems()                 Sets the current record's "Items" collection
 * 
 * @package    dspace
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEperson extends BaseDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('public.eperson');
        $this->hasColumn('eperson_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'length' => 4,
             ));
        $this->hasColumn('email', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('password', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('firstname', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('lastname', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('can_log_in', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('require_certificate', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('self_registered', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('last_active', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('sub_frequency', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('phone', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('netid', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('language', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Subscription as Subscriptions', array(
             'local' => 'eperson_id',
             'foreign' => 'eperson_id'));

        $this->hasMany('Resourcepolicy as Resourcepolicys', array(
             'local' => 'eperson_id',
             'foreign' => 'eperson_id'));

        $this->hasMany('Workflowitem as Workflowitems', array(
             'local' => 'eperson_id',
             'foreign' => 'owner'));

        $this->hasMany('Epersongroup2eperson as Epersongroup2epersons', array(
             'local' => 'eperson_id',
             'foreign' => 'eperson_id'));

        $this->hasMany('Tasklistitem as Tasklistitems', array(
             'local' => 'eperson_id',
             'foreign' => 'eperson_id'));

        $this->hasMany('Item as Items', array(
             'local' => 'eperson_id',
             'foreign' => 'submitter_id'));
    }
}