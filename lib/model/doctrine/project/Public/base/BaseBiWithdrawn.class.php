<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('BiWithdrawn', 'doctrine');

/**
 * BaseBiWithdrawn
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $item_id
 * @property string $sort_3
 * @property string $sort_2
 * @property string $sort_1
 * @property Item $Item
 * 
 * @method integer     getId()      Returns the current record's "id" value
 * @method integer     getItemId()  Returns the current record's "item_id" value
 * @method string      getSort3()   Returns the current record's "sort_3" value
 * @method string      getSort2()   Returns the current record's "sort_2" value
 * @method string      getSort1()   Returns the current record's "sort_1" value
 * @method Item        getItem()    Returns the current record's "Item" value
 * @method BiWithdrawn setId()      Sets the current record's "id" value
 * @method BiWithdrawn setItemId()  Sets the current record's "item_id" value
 * @method BiWithdrawn setSort3()   Sets the current record's "sort_3" value
 * @method BiWithdrawn setSort2()   Sets the current record's "sort_2" value
 * @method BiWithdrawn setSort1()   Sets the current record's "sort_1" value
 * @method BiWithdrawn setItem()    Sets the current record's "Item" value
 * 
 * @package    dspace
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBiWithdrawn extends BaseDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('public.bi_withdrawn');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'length' => 4,
             ));
        $this->hasColumn('item_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('sort_3', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('sort_2', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('sort_1', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Item', array(
             'local' => 'item_id',
             'foreign' => 'item_id'));
    }
}