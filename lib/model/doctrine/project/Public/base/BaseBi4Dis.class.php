<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Bi4Dis', 'doctrine');

/**
 * BaseBi4Dis
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $distinct_id
 * @property string $authority
 * @property string $value
 * @property string $sort_value
 * @property Doctrine_Collection $Bi4Dmaps
 * 
 * @method integer             getId()          Returns the current record's "id" value
 * @method integer             getDistinctId()  Returns the current record's "distinct_id" value
 * @method string              getAuthority()   Returns the current record's "authority" value
 * @method string              getValue()       Returns the current record's "value" value
 * @method string              getSortValue()   Returns the current record's "sort_value" value
 * @method Doctrine_Collection getBi4Dmaps()    Returns the current record's "Bi4Dmaps" collection
 * @method Bi4Dis              setId()          Sets the current record's "id" value
 * @method Bi4Dis              setDistinctId()  Sets the current record's "distinct_id" value
 * @method Bi4Dis              setAuthority()   Sets the current record's "authority" value
 * @method Bi4Dis              setValue()       Sets the current record's "value" value
 * @method Bi4Dis              setSortValue()   Sets the current record's "sort_value" value
 * @method Bi4Dis              setBi4Dmaps()    Sets the current record's "Bi4Dmaps" collection
 * 
 * @package    dspace
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBi4Dis extends BaseDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('public.bi_4_dis');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'length' => 4,
             ));
        $this->hasColumn('distinct_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('authority', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('value', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('sort_value', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Bi4Dmap as Bi4Dmaps', array(
             'local' => 'distinct_id',
             'foreign' => 'distinct_id'));
    }
}