<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('HarvestedCollection', 'doctrine');

/**
 * BaseHarvestedCollection
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $collection_id
 * @property integer $harvest_type
 * @property string $oai_source
 * @property string $oai_set_id
 * @property string $harvest_message
 * @property string $metadata_config_id
 * @property integer $harvest_status
 * @property timestamp $harvest_start_time
 * @property timestamp $last_harvested
 * @property integer $id
 * @property Collection $Collection
 * 
 * @method integer             getCollectionId()       Returns the current record's "collection_id" value
 * @method integer             getHarvestType()        Returns the current record's "harvest_type" value
 * @method string              getOaiSource()          Returns the current record's "oai_source" value
 * @method string              getOaiSetId()           Returns the current record's "oai_set_id" value
 * @method string              getHarvestMessage()     Returns the current record's "harvest_message" value
 * @method string              getMetadataConfigId()   Returns the current record's "metadata_config_id" value
 * @method integer             getHarvestStatus()      Returns the current record's "harvest_status" value
 * @method timestamp           getHarvestStartTime()   Returns the current record's "harvest_start_time" value
 * @method timestamp           getLastHarvested()      Returns the current record's "last_harvested" value
 * @method integer             getId()                 Returns the current record's "id" value
 * @method Collection          getCollection()         Returns the current record's "Collection" value
 * @method HarvestedCollection setCollectionId()       Sets the current record's "collection_id" value
 * @method HarvestedCollection setHarvestType()        Sets the current record's "harvest_type" value
 * @method HarvestedCollection setOaiSource()          Sets the current record's "oai_source" value
 * @method HarvestedCollection setOaiSetId()           Sets the current record's "oai_set_id" value
 * @method HarvestedCollection setHarvestMessage()     Sets the current record's "harvest_message" value
 * @method HarvestedCollection setMetadataConfigId()   Sets the current record's "metadata_config_id" value
 * @method HarvestedCollection setHarvestStatus()      Sets the current record's "harvest_status" value
 * @method HarvestedCollection setHarvestStartTime()   Sets the current record's "harvest_start_time" value
 * @method HarvestedCollection setLastHarvested()      Sets the current record's "last_harvested" value
 * @method HarvestedCollection setId()                 Sets the current record's "id" value
 * @method HarvestedCollection setCollection()         Sets the current record's "Collection" value
 * 
 * @package    dspace
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseHarvestedCollection extends BaseDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('public.harvested_collection');
        $this->hasColumn('collection_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('harvest_type', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('oai_source', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('oai_set_id', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('harvest_message', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('metadata_config_id', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('harvest_status', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('harvest_start_time', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('last_harvested', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Collection', array(
             'local' => 'collection_id',
             'foreign' => 'collection_id'));
    }
}