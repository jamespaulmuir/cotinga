<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('HarvestedItem', 'doctrine');

/**
 * BaseHarvestedItem
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $item_id
 * @property timestamp $last_harvested
 * @property string $oai_id
 * @property integer $id
 * @property Item $Item
 * 
 * @method integer       getItemId()         Returns the current record's "item_id" value
 * @method timestamp     getLastHarvested()  Returns the current record's "last_harvested" value
 * @method string        getOaiId()          Returns the current record's "oai_id" value
 * @method integer       getId()             Returns the current record's "id" value
 * @method Item          getItem()           Returns the current record's "Item" value
 * @method HarvestedItem setItemId()         Sets the current record's "item_id" value
 * @method HarvestedItem setLastHarvested()  Sets the current record's "last_harvested" value
 * @method HarvestedItem setOaiId()          Sets the current record's "oai_id" value
 * @method HarvestedItem setId()             Sets the current record's "id" value
 * @method HarvestedItem setItem()           Sets the current record's "Item" value
 * 
 * @package    dspace
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseHarvestedItem extends BaseDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('public.harvested_item');
        $this->hasColumn('item_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('last_harvested', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('oai_id', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Item', array(
             'local' => 'item_id',
             'foreign' => 'item_id'));
    }
}